 <section class= "ui section">

  <div class="map-wrapper">
    <div id="logo-overlay">
       <img src="https://res.cloudinary.com/jimtheenchanter/image/upload/v1589366111/SimpleGIS/logo-simplegis-grey150.png"/>
     </div>
      <div id="mapid"></div>
  </div>
   
<script type="text/javascript">
        var mymap = L.map('mapid').setView([52.346425, -7.321243], 18);
        // create a base layer of map tiles
         L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', 
        {
          attribution: '',
          minZoom:17,
              maxZoom: 19,
          id: 'mapbox/satellite-v9',
          accessToken:
          '{{ mapKey }} ' 

          }).addTo(mymap); 

          

  var greenIcon = new L.Icon({
  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});

  var redIcon = new L.Icon({
  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});


  var yellowIcon = new L.Icon({
  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-yellow.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});


// User clicks the map which adds coords to make polyline array
var polyline = new L.Polyline([], {color:"yellow"}).addTo(mymap);

mymap.on('click', function(event) {
 polyline.addLatLng(event.latlng);
// populate hidden latlng input box with polyline LatLngs
  document.getElementById('latlng').value = polyline.getLatLngs();
});


   
  {{#each polylines}}
          // create an array made up of lat lngs
    arr = [];
    {{#each latlng}}
        console.log("{{this.lat}}  {{this.lng}}")
        mini_arr = [];
        mini_arr.push({{this.lat}});
        mini_arr.push({{this.lng}});
        arr.push(mini_arr);
    {{/each}}
      console.log(arr, "latlng array passed")
      test = new L.polyline(arr);
      test.addTo(mymap)
  L.polyline(arr,  {color: 'orange', title: '{{title}}'}).addTo(mymap);
  
  {{/each}}

{{#each polygons}}
   
// create an array made up of lat lngs
    arr = [];
    {{#each latlng}}
        console.log("{{this.lat}}  {{this.lng}}")
        mini_arr = [];
        mini_arr.push({{this.lat}});
        mini_arr.push({{this.lng}});
        arr.push(mini_arr);
    {{/each}}
      console.log(arr, "latlng array passed")
      test = new L.polygon(arr);
      test.addTo(mymap)
  L.polygon(arr,  {color: 'blue', title: '{{title}}'}).addTo(mymap);
 
  {{/each}}       
  </script>
</section>




